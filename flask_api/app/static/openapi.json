{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Zuplae Lab API",
    "description" : "Zuplae Lab API",
    "contact" : {
      "email" : "abreumatheus@icloud.com"
    },
    "version" : "Alpha"
  },
  "servers" : [ {
    "url" : "http://localhost:7000/",
    "description" : "Main API"
  } ],
  "paths" : {
    "/products/{product_id}" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "Get one product",
        "operationId" : "searchProductID",
        "parameters" : [ {
          "name" : "product_id",
          "in" : "path",
          "description" : "pass an id of an existing product",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "$ref": ""
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "put" : {
        "tags" : [ "Products" ],
        "summary" : "Updates a product",
        "operationId" : "updateProducts",
        "parameters" : [ {
          "name" : "product_id",
          "in" : "path",
          "description" : "pass an id of an existing product",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Product to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductUpdate"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Product updated"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      },
      "delete" : {
        "tags" : [ "Products" ],
        "summary" : "Deletes a product",
        "operationId" : "deleteProducts",
        "parameters" : [ {
          "name" : "product_id",
          "in" : "path",
          "description" : "pass an id of an existing product",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Product deleted"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      }
    },
    "/products" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "Get all products",
        "operationId" : "searchProducts",
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "Products" ],
        "summary" : "Creates a product",
        "operationId" : "addProduct",
        "requestBody" : {
          "description" : "Product to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductCreate"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Product created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      }
    },
    "/categories/{category_id}" : {
      "get" : {
        "tags" : [ "Categories" ],
        "summary" : "Get one or more Categories",
        "operationId" : "searchCategories",
        "parameters" : [ {
          "name" : "category_id",
          "in" : "path",
          "description" : "pass an id of an existing Categories",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "put" : {
        "tags" : [ "Categories" ],
        "summary" : "Updates a Category",
        "operationId" : "updateCategorys",
        "parameters" : [ {
          "name" : "category_id",
          "in" : "path",
          "description" : "pass an id of an existing Category",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Category to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryCreateOrUpdate"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Category updated"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      },
      "delete" : {
        "tags" : [ "Categories" ],
        "summary" : "Deletes a Category",
        "operationId" : "deleteCategory",
        "parameters" : [ {
          "name" : "category_id",
          "in" : "query",
          "description" : "pass an id of an existing Category",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Category deleted"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      }
    },
    "/categories" : {
      "get" : {
        "tags" : [ "Categories" ],
        "summary" : "Get one or more Categories",
        "operationId" : "searchCategories",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "pass an id of an existing Categories",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "Categories" ],
        "summary" : "Creates a Category",
        "operationId" : "addCategory",
        "requestBody" : {
          "description" : "Category to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoryCreateOrUpdate"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Category created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        }
      },
    }
  },
  "components" : {
    "schemas" : {
      "Product" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "name" : {
            "type" : "string",
            "example" : "iPhone 11"
          },
          "description" : {
            "type" : "string",
            "example" : "This is an iPhone"
          },
          "price" : {
            "type" : "number",
            "example" : 4500
          },
          "promotional_price" : {
            "type" : "number",
            "example" : 2500
          },
          "category_id" : {
            "type" : "integer",
            "example" : 1
          },
          "photo" : {
            "type" : "array",
            "example" : [ "d290f1ee-6c54-4b01-90e6-d701748f0851" ],
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ProductUpdate" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "iPhone 11"
          },
          "description" : {
            "type" : "string",
            "example" : "This is an iPhone"
          },
          "price" : {
            "type" : "number",
            "example" : 4500
          },
          "promotional_price" : {
            "type" : "number",
            "example" : 2500
          },
          "category_id" : {
            "type" : "integer",
            "example" : 1
          },
          "photo" : {
            "type" : "array",
            "example" : [ "d290f1ee-6c54-4b01-90e6-d701748f0851" ],
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ProductCreate" : {
        "required" : [ "category_id", "description", "name", "photo", "price" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "iPhone 11"
          },
          "description" : {
            "type" : "string",
            "example" : "This is an iPhone"
          },
          "price" : {
            "type" : "number",
            "example" : 4500
          },
          "promotional_price" : {
            "type" : "number",
            "example" : 2500
          },
          "category_id" : {
            "type" : "integer",
            "example" : 1
          },
          "photo" : {
            "type" : "array",
            "example" : [ "d290f1ee-6c54-4b01-90e6-d701748f0851" ],
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Category" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "example" : "Eletrônicos"
          }
        }
      },
      "CategoryCreateOrUpdate" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Eletrônicos"
          }
        }
      }
    }
  }
}